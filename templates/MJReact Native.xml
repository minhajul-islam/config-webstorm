<templateSet group="MJReact Native">
  <template name="mcmp" value="import React, {Component} from 'react'&#10;import PropsTypes from 'prop-types'&#10;import {TouchableHighlight, Text, View, Dimensions, StyleSheet, Platform} from 'react-native'&#10;&#10;&#10;export default class $TempComponent$ extends Component {&#10;    constructor(props) {&#10;        super(props);&#10;    }&#10;&#10;    static defaultProps = {&#10;        fontSize: 16,&#10;        backgroundColor: 'white',&#10;        text: 'TempComponent',&#10;        textColor: 'black',&#10;        disabled:true&#10;&#10;    };&#10;&#10;    static propTypes = {&#10;        fontSize: PropsTypes.number,&#10;        height: PropsTypes.number,&#10;        width: PropsTypes.oneOfType([PropsTypes.string, PropsTypes.number]),&#10;        borderRadius: PropsTypes.number,&#10;        backgroundColor: PropsTypes.string,&#10;        text: PropsTypes.string,&#10;        textColor: PropsTypes.string,&#10;        disabled: PropsTypes.boolean,&#10;        onClick: PropsTypes.func&#10;    };&#10;&#10;    render() {&#10;        return (&#10;            &lt;TouchableHighlight disabled={this.props.disable} style={styles.container} underlayColor='transparent' onPress={this.props.onClick}&gt;&#10;                &lt;View style={styles.column_container}&gt;&#10;                    &lt;Text style={styles.center_text}&gt;{this.props.text}&lt;/Text&gt;&#10;                &lt;/View&gt;&#10;            &lt;/TouchableHighlight&gt;&#10;        )&#10;    }&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;    container: {&#10;        alignItems: 'center',&#10;        justifyContent: 'center',&#10;        backgroundColor: 'white',&#10;        alignSelf: 'center',&#10;        margin: 16,&#10;    },&#10;    column_container: {&#10;        justifyContent: 'center',&#10;        backgroundColor: 'white',&#10;        alignSelf: 'center',&#10;    },&#10;    row_container: {&#10;        flexDirection:'row',&#10;        justifyContent: 'center',&#10;        backgroundColor: 'white',&#10;        alignSelf: 'center',&#10;    },&#10;    center_text:{&#10;        fontSize: 16,&#10;        color: 'black',&#10;        textAlignVertical: 'center',&#10;    }&#10;&#10;});" description="create RN component with onclick" toReformat="false" toShortenFQNames="true">
    <variable name="TempComponent" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="mstyle" value="const styles = StyleSheet.create({&#10;    container: {&#10;        alignItems: 'center',&#10;        justifyContent: 'center',&#10;        backgroundColor: 'white',&#10;        alignSelf: 'center',&#10;        margin: 16,&#10;    },&#10;    column_container: {&#10;        justifyContent: 'center',&#10;        backgroundColor: 'white',&#10;        alignSelf: 'center',&#10;    },&#10;    row_container: {&#10;        flexDirection:'row',&#10;        justifyContent: 'center',&#10;        backgroundColor: 'white',&#10;        alignSelf: 'center',&#10;    },&#10;    center_text:{&#10;        fontSize: 16,&#10;        color: 'black',&#10;        textAlignVertical: 'center',&#10;    }&#10;&#10;});" description="StyleSheet  with container" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="mrowF" value="import React from &quot;react&quot;;&#10;import {Button, Dimensions, Image, View, Text, TouchableOpacity,StyleSheet} from &quot;react-native&quot;;&#10;&#10;&#10;const $RowOfFlatList$ = props =&gt; {&#10;    let screenWidth = Dimensions.get('window').width;&#10;    let styles = StyleSheet.create({&#10;        container: {&#10;            flexDirection: 'row',&#10;            marginLeft: 6,&#10;            marginRight: 6,&#10;            marginTop: 10&#10;        },&#10;        column_container: {&#10;            justifyContent: 'center',&#10;            backgroundColor: 'white',&#10;            alignSelf: 'center',&#10;        },&#10;        row_container: {&#10;            flexDirection: 'row',&#10;            justifyContent: 'center',&#10;            backgroundColor: 'white',&#10;            alignSelf: 'center',&#10;        },&#10;        center_text: {&#10;            fontSize: 16,&#10;            color: 'black',&#10;            textAlignVertical: 'center',&#10;        }&#10;&#10;    });&#10;&#10;&#10;    return (&#10;        &lt;TouchableOpacity onPress={props.onClickItem}&gt;&#10;            &lt;View style={styles.container}&gt;&#10;                &lt;View style={styles.column_container}&gt;&#10;                    &lt;Text style={styles.center_text}&gt;{props.title}&lt;/Text&gt;&#10;                &lt;/View&gt;&#10;            &lt;/View&gt;&#10;&#10;        &lt;/TouchableOpacity&gt;&#10;    );&#10;&#10;};&#10;&#10;export default $RowOfFlatList$;&#10;&#10;{/*&lt;$RowOfFlatList$*/}&#10;    {/*onClickItem={() =&gt; this.onClick}*/}&#10;    {/*title={&quot;title&quot;}*/}&#10;    {/*number={&quot;number&quot;}*/}&#10;{/*/&gt;*/}" description="flatlist row view function with onclick" toReformat="false" toShortenFQNames="true">
    <variable name="RowOfFlatList" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="mactivity" value="import React, {Component} from 'react';&#10;&#10;import {&#10;    StyleSheet,&#10;    View,&#10;    Text&#10;} from 'react-native';&#10;&#10;&#10;class $TempActivity$ extends Component {&#10;&#10;    constructor(props) {&#10;        super(props);&#10;        this.state = {&#10;            name: &quot;$TempActivity$&quot;,&#10;        };&#10;    }&#10;&#10;    componentDidMount() {&#10;&#10;    }&#10;&#10;    render() {&#10;        const {name} = this.state;&#10;&#10;        return (&#10;            &lt;View style={styles.container}&gt;&#10;                &lt;Text style={styles.center_text}&gt;{name}&lt;/Text&gt;&#10;            &lt;/View&gt;&#10;        );&#10;    }&#10;}&#10;&#10;const styles = StyleSheet.create({&#10;    container: {&#10;        alignItems: 'center',&#10;        justifyContent: 'center',&#10;        backgroundColor: 'white',&#10;        alignSelf: 'center',&#10;        margin: 16,&#10;    },&#10;    column_container: {&#10;        justifyContent: 'center',&#10;        backgroundColor: 'white',&#10;        alignSelf: 'center',&#10;    },&#10;    row_container: {&#10;        flexDirection:'row',&#10;        justifyContent: 'center',&#10;        backgroundColor: 'white',&#10;        alignSelf: 'center',&#10;    },&#10;    center_text:{&#10;        fontSize: 16,&#10;        color: 'black',&#10;        textAlignVertical: 'center',&#10;    }&#10;&#10;});&#10;&#10;export default $TempActivity$;" description="empty activity with life-cicle mathods" toReformat="false" toShortenFQNames="true">
    <variable name="TempActivity" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="mdata" value=" contacts: [&#10;                {&#10;                    &quot;name&quot;: &quot;minhaj&quot;,&#10;                    &quot;number&quot;: &quot;01515-272948&quot;,&#10;                    &quot;thumbnail&quot;: &quot;&quot;&#10;                },&#10;                {&#10;                    &quot;name&quot;: &quot;korim&quot;,&#10;                    &quot;number&quot;: &quot;01768-386145&quot;,&#10;                    &quot;thumbnail&quot;: &quot;&quot;&#10;                },&#10;                {&#10;                    &quot;name&quot;: &quot;rohime&quot;,&#10;                    &quot;number&quot;: &quot;+880 1841-016216&quot;,&#10;                    &quot;thumbnail&quot;: &quot;&quot;&#10;                }&#10;                ,&#10;                {&#10;                    &quot;name&quot;: &quot;korim&quot;,&#10;                    &quot;number&quot;: &quot;01768-386145&quot;,&#10;                    &quot;thumbnail&quot;: &quot;&quot;&#10;                },&#10;                {&#10;                    &quot;name&quot;: &quot;rohime&quot;,&#10;                    &quot;number&quot;: &quot;+880 1841-016216&quot;,&#10;                    &quot;thumbnail&quot;: &quot;&quot;&#10;                }&#10;                ,&#10;                {&#10;                    &quot;name&quot;: &quot;korim&quot;,&#10;                    &quot;number&quot;: &quot;01768-386145&quot;,&#10;                    &quot;thumbnail&quot;: &quot;&quot;&#10;                },&#10;                {&#10;                    &quot;name&quot;: &quot;rohime&quot;,&#10;                    &quot;number&quot;: &quot;+880 1841-016216&quot;,&#10;                    &quot;thumbnail&quot;: &quot;&quot;&#10;                }&#10;                ,&#10;                {&#10;                    &quot;name&quot;: &quot;korim&quot;,&#10;                    &quot;number&quot;: &quot;01768-386145&quot;,&#10;                    &quot;thumbnail&quot;: &quot;&quot;&#10;                },&#10;                {&#10;                    &quot;name&quot;: &quot;rohime&quot;,&#10;                    &quot;number&quot;: &quot;+880 1841-016216&quot;,&#10;                    &quot;thumbnail&quot;: &quot;&quot;&#10;                }&#10;                ,&#10;                {&#10;                    &quot;name&quot;: &quot;korim&quot;,&#10;                    &quot;number&quot;: &quot;01768-386145&quot;,&#10;                    &quot;thumbnail&quot;: &quot;&quot;&#10;                },&#10;                {&#10;                    &quot;name&quot;: &quot;rohime&quot;,&#10;                    &quot;number&quot;: &quot;+880 1841-016216&quot;,&#10;                    &quot;thumbnail&quot;: &quot;&quot;&#10;                }&#10;                ,&#10;                {&#10;                    &quot;name&quot;: &quot;korim&quot;,&#10;                    &quot;number&quot;: &quot;01768-386145&quot;,&#10;                    &quot;thumbnail&quot;: &quot;&quot;&#10;                },&#10;                {&#10;                    &quot;name&quot;: &quot;rohime&quot;,&#10;                    &quot;number&quot;: &quot;+880 1841-016216&quot;,&#10;                    &quot;thumbnail&quot;: &quot;&quot;&#10;                }&#10;                ,&#10;                {&#10;                    &quot;name&quot;: &quot;korim&quot;,&#10;                    &quot;number&quot;: &quot;01768-386145&quot;,&#10;                    &quot;thumbnail&quot;: &quot;&quot;&#10;                }&#10;                ,&#10;                {&#10;                    &quot;name&quot;: &quot;rohime&quot;,&#10;                    &quot;number&quot;: &quot;+880 1841-016216&quot;,&#10;                    &quot;thumbnail&quot;: &quot;&quot;&#10;                }&#10;            ]," description="demo data for flatlist test" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="mlog" value="console.log('$MESSAGE$: ', $PARAM$);" description="console log" toReformat="false" toShortenFQNames="true">
    <variable name="MESSAGE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="mss" value="this.setState({&#10;  $KEY$: $VALUE$,&#10;});" description="setState" toReformat="false" toShortenFQNames="true">
    <variable name="KEY" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VALUE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cdm" value="componentDidMount() {&#10;  $END$&#10;}" description="componentDidMount" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>